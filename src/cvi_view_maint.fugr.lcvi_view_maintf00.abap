*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 04.01.2006 at 13:10:19 by user CHANDRASEKAA
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: CVIV_CCID_LINK..................................*
FORM GET_DATA_CVIV_CCID_LINK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CCID_LINK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CCID_LINK .
CVIV_CCID_LINK-CLIENT =
CVIC_CCID_LINK-CLIENT .
CVIV_CCID_LINK-PCID_BP =
CVIC_CCID_LINK-PCID_BP .
CVIV_CCID_LINK-CCINS =
CVIC_CCID_LINK-CCINS .
    SELECT SINGLE * FROM TB033 WHERE
CCINS = CVIC_CCID_LINK-PCID_BP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB033T WHERE
CCINS = TB033-CCINS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CCID_LINK-BEZ30 =
TB033T-BEZ30 .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM TVCIN WHERE
CCINS = CVIC_CCID_LINK-CCINS .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVCINT WHERE
CCINS = TVCIN-CCINS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CCID_LINK-VTEXT =
TVCINT-VTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_CCID_LINK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CCID_LINK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CCID_LINK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CCID_LINK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CCID_LINK WHERE
  PCID_BP = CVIV_CCID_LINK-PCID_BP .
    IF SY-SUBRC = 0.
    DELETE CVIC_CCID_LINK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CCID_LINK WHERE
  PCID_BP = CVIV_CCID_LINK-PCID_BP .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CCID_LINK.
    ENDIF.
CVIC_CCID_LINK-CLIENT =
CVIV_CCID_LINK-CLIENT .
CVIC_CCID_LINK-PCID_BP =
CVIV_CCID_LINK-PCID_BP .
CVIC_CCID_LINK-CCINS =
CVIV_CCID_LINK-CCINS .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CCID_LINK .
    ELSE.
    INSERT CVIC_CCID_LINK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CCID_LINK-UPD_FLAG,
STATUS_CVIV_CCID_LINK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CCID_LINK.
  SELECT SINGLE * FROM CVIC_CCID_LINK WHERE
PCID_BP = CVIV_CCID_LINK-PCID_BP .
CVIV_CCID_LINK-CLIENT =
CVIC_CCID_LINK-CLIENT .
CVIV_CCID_LINK-PCID_BP =
CVIC_CCID_LINK-PCID_BP .
CVIV_CCID_LINK-CCINS =
CVIC_CCID_LINK-CCINS .
    SELECT SINGLE * FROM TB033 WHERE
CCINS = CVIC_CCID_LINK-PCID_BP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB033T WHERE
CCINS = TB033-CCINS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CCID_LINK-BEZ30 =
TB033T-BEZ30 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CCID_LINK-BEZ30 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CCID_LINK-BEZ30 .
    ENDIF.
    SELECT SINGLE * FROM TVCIN WHERE
CCINS = CVIC_CCID_LINK-CCINS .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVCINT WHERE
CCINS = TVCIN-CCINS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CCID_LINK-VTEXT =
TVCINT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CCID_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CCID_LINK-VTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CCID_LINK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CCID_LINK-PCID_BP TO
CVIC_CCID_LINK-PCID_BP .
MOVE CVIV_CCID_LINK-CLIENT TO
CVIC_CCID_LINK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CCID_LINK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CCID_LINK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CCID_LINK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_CCID_LINK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_CCID_LINK-CLIENT =
CVIV_CCID_LINK-CLIENT .
CVIC_CCID_LINK-PCID_BP =
CVIV_CCID_LINK-PCID_BP .
CVIC_CCID_LINK-CCINS =
CVIV_CCID_LINK-CCINS .
    SELECT SINGLE * FROM TB033 WHERE
CCINS = CVIC_CCID_LINK-PCID_BP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB033T WHERE
CCINS = TB033-CCINS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CCID_LINK-BEZ30 =
TB033T-BEZ30 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CCID_LINK-BEZ30 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CCID_LINK-BEZ30 .
    ENDIF.
    SELECT SINGLE * FROM TVCIN WHERE
CCINS = CVIC_CCID_LINK-CCINS .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVCINT WHERE
CCINS = TVCIN-CCINS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CCID_LINK-VTEXT =
TVCINT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CCID_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CCID_LINK-VTEXT .
    ENDIF.
ENDFORM.
*...processing: CVIV_CP1_LINK...................................*
FORM GET_DATA_CVIV_CP1_LINK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CP1_LINK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CP1_LINK .
CVIV_CP1_LINK-CLIENT =
CVIC_CP1_LINK-CLIENT .
CVIV_CP1_LINK-ABTNR =
CVIC_CP1_LINK-ABTNR .
CVIV_CP1_LINK-GP_ABTNR =
CVIC_CP1_LINK-GP_ABTNR .
    SELECT SINGLE * FROM TB910 WHERE
ABTNR = CVIC_CP1_LINK-GP_ABTNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB911 WHERE
ABTNR = TB910-ABTNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP1_LINK-BEZ20 =
TB911-BEZ20 .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM TSAB WHERE
ABTNR = CVIC_CP1_LINK-ABTNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TSABT WHERE
ABTNR = TSAB-ABTNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP1_LINK-VTEXT =
TSABT-VTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_CP1_LINK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CP1_LINK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CP1_LINK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CP1_LINK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP1_LINK WHERE
  ABTNR = CVIV_CP1_LINK-ABTNR .
    IF SY-SUBRC = 0.
    DELETE CVIC_CP1_LINK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP1_LINK WHERE
  ABTNR = CVIV_CP1_LINK-ABTNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CP1_LINK.
    ENDIF.
CVIC_CP1_LINK-CLIENT =
CVIV_CP1_LINK-CLIENT .
CVIC_CP1_LINK-ABTNR =
CVIV_CP1_LINK-ABTNR .
CVIC_CP1_LINK-GP_ABTNR =
CVIV_CP1_LINK-GP_ABTNR .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CP1_LINK .
    ELSE.
    INSERT CVIC_CP1_LINK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CP1_LINK-UPD_FLAG,
STATUS_CVIV_CP1_LINK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CP1_LINK.
  SELECT SINGLE * FROM CVIC_CP1_LINK WHERE
ABTNR = CVIV_CP1_LINK-ABTNR .
CVIV_CP1_LINK-CLIENT =
CVIC_CP1_LINK-CLIENT .
CVIV_CP1_LINK-ABTNR =
CVIC_CP1_LINK-ABTNR .
CVIV_CP1_LINK-GP_ABTNR =
CVIC_CP1_LINK-GP_ABTNR .
    SELECT SINGLE * FROM TB910 WHERE
ABTNR = CVIC_CP1_LINK-GP_ABTNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB911 WHERE
ABTNR = TB910-ABTNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP1_LINK-BEZ20 =
TB911-BEZ20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP1_LINK-BEZ20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP1_LINK-BEZ20 .
    ENDIF.
    SELECT SINGLE * FROM TSAB WHERE
ABTNR = CVIC_CP1_LINK-ABTNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TSABT WHERE
ABTNR = TSAB-ABTNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP1_LINK-VTEXT =
TSABT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP1_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP1_LINK-VTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CP1_LINK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CP1_LINK-ABTNR TO
CVIC_CP1_LINK-ABTNR .
MOVE CVIV_CP1_LINK-CLIENT TO
CVIC_CP1_LINK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CP1_LINK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CP1_LINK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CP1_LINK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_CP1_LINK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_CP1_LINK-CLIENT =
CVIV_CP1_LINK-CLIENT .
CVIC_CP1_LINK-ABTNR =
CVIV_CP1_LINK-ABTNR .
CVIC_CP1_LINK-GP_ABTNR =
CVIV_CP1_LINK-GP_ABTNR .
    SELECT SINGLE * FROM TB910 WHERE
ABTNR = CVIC_CP1_LINK-GP_ABTNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB911 WHERE
ABTNR = TB910-ABTNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP1_LINK-BEZ20 =
TB911-BEZ20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP1_LINK-BEZ20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP1_LINK-BEZ20 .
    ENDIF.
    SELECT SINGLE * FROM TSAB WHERE
ABTNR = CVIC_CP1_LINK-ABTNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TSABT WHERE
ABTNR = TSAB-ABTNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP1_LINK-VTEXT =
TSABT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP1_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP1_LINK-VTEXT .
    ENDIF.
ENDFORM.
*...processing: CVIV_CP2_LINK...................................*
FORM GET_DATA_CVIV_CP2_LINK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CP2_LINK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CP2_LINK .
CVIV_CP2_LINK-CLIENT =
CVIC_CP2_LINK-CLIENT .
CVIV_CP2_LINK-PAFKT =
CVIC_CP2_LINK-PAFKT .
CVIV_CP2_LINK-GP_PAFKT =
CVIC_CP2_LINK-GP_PAFKT .
    SELECT SINGLE * FROM TB912 WHERE
PAFKT = CVIC_CP2_LINK-GP_PAFKT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB913 WHERE
PAFKT = TB912-PAFKT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP2_LINK-BEZ30 =
TB913-BEZ30 .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM TPFK WHERE
PAFKT = CVIC_CP2_LINK-PAFKT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TPFKT WHERE
PAFKT = TPFK-PAFKT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP2_LINK-VTEXT =
TPFKT-VTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_CP2_LINK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CP2_LINK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CP2_LINK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CP2_LINK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP2_LINK WHERE
  PAFKT = CVIV_CP2_LINK-PAFKT .
    IF SY-SUBRC = 0.
    DELETE CVIC_CP2_LINK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP2_LINK WHERE
  PAFKT = CVIV_CP2_LINK-PAFKT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CP2_LINK.
    ENDIF.
CVIC_CP2_LINK-CLIENT =
CVIV_CP2_LINK-CLIENT .
CVIC_CP2_LINK-PAFKT =
CVIV_CP2_LINK-PAFKT .
CVIC_CP2_LINK-GP_PAFKT =
CVIV_CP2_LINK-GP_PAFKT .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CP2_LINK .
    ELSE.
    INSERT CVIC_CP2_LINK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CP2_LINK-UPD_FLAG,
STATUS_CVIV_CP2_LINK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CP2_LINK.
  SELECT SINGLE * FROM CVIC_CP2_LINK WHERE
PAFKT = CVIV_CP2_LINK-PAFKT .
CVIV_CP2_LINK-CLIENT =
CVIC_CP2_LINK-CLIENT .
CVIV_CP2_LINK-PAFKT =
CVIC_CP2_LINK-PAFKT .
CVIV_CP2_LINK-GP_PAFKT =
CVIC_CP2_LINK-GP_PAFKT .
    SELECT SINGLE * FROM TB912 WHERE
PAFKT = CVIC_CP2_LINK-GP_PAFKT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB913 WHERE
PAFKT = TB912-PAFKT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP2_LINK-BEZ30 =
TB913-BEZ30 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP2_LINK-BEZ30 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP2_LINK-BEZ30 .
    ENDIF.
    SELECT SINGLE * FROM TPFK WHERE
PAFKT = CVIC_CP2_LINK-PAFKT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TPFKT WHERE
PAFKT = TPFK-PAFKT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP2_LINK-VTEXT =
TPFKT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP2_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP2_LINK-VTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CP2_LINK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CP2_LINK-PAFKT TO
CVIC_CP2_LINK-PAFKT .
MOVE CVIV_CP2_LINK-CLIENT TO
CVIC_CP2_LINK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CP2_LINK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CP2_LINK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CP2_LINK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_CP2_LINK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_CP2_LINK-CLIENT =
CVIV_CP2_LINK-CLIENT .
CVIC_CP2_LINK-PAFKT =
CVIV_CP2_LINK-PAFKT .
CVIC_CP2_LINK-GP_PAFKT =
CVIV_CP2_LINK-GP_PAFKT .
    SELECT SINGLE * FROM TB912 WHERE
PAFKT = CVIC_CP2_LINK-GP_PAFKT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB913 WHERE
PAFKT = TB912-PAFKT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP2_LINK-BEZ30 =
TB913-BEZ30 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP2_LINK-BEZ30 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP2_LINK-BEZ30 .
    ENDIF.
    SELECT SINGLE * FROM TPFK WHERE
PAFKT = CVIC_CP2_LINK-PAFKT .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TPFKT WHERE
PAFKT = TPFK-PAFKT AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP2_LINK-VTEXT =
TPFKT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP2_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP2_LINK-VTEXT .
    ENDIF.
ENDFORM.
*...processing: CVIV_CP3_LINK...................................*
FORM GET_DATA_CVIV_CP3_LINK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CP3_LINK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CP3_LINK .
CVIV_CP3_LINK-CLIENT =
CVIC_CP3_LINK-CLIENT .
CVIV_CP3_LINK-PARVO =
CVIC_CP3_LINK-PARVO .
CVIV_CP3_LINK-PAAUTH =
CVIC_CP3_LINK-PAAUTH .
    SELECT SINGLE * FROM TB914 WHERE
PAAUTH = CVIC_CP3_LINK-PAAUTH .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB915 WHERE
PAAUTH = TB914-PAAUTH AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP3_LINK-BEZ20 =
TB915-BEZ20 .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM TVPV WHERE
PARVO = CVIC_CP3_LINK-PARVO .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVPVT WHERE
PARVO = TVPV-PARVO AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP3_LINK-VTEXT =
TVPVT-VTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_CP3_LINK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CP3_LINK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CP3_LINK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CP3_LINK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP3_LINK WHERE
  PARVO = CVIV_CP3_LINK-PARVO .
    IF SY-SUBRC = 0.
    DELETE CVIC_CP3_LINK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP3_LINK WHERE
  PARVO = CVIV_CP3_LINK-PARVO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CP3_LINK.
    ENDIF.
CVIC_CP3_LINK-CLIENT =
CVIV_CP3_LINK-CLIENT .
CVIC_CP3_LINK-PARVO =
CVIV_CP3_LINK-PARVO .
CVIC_CP3_LINK-PAAUTH =
CVIV_CP3_LINK-PAAUTH .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CP3_LINK .
    ELSE.
    INSERT CVIC_CP3_LINK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CP3_LINK-UPD_FLAG,
STATUS_CVIV_CP3_LINK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CP3_LINK.
  SELECT SINGLE * FROM CVIC_CP3_LINK WHERE
PARVO = CVIV_CP3_LINK-PARVO .
CVIV_CP3_LINK-CLIENT =
CVIC_CP3_LINK-CLIENT .
CVIV_CP3_LINK-PARVO =
CVIC_CP3_LINK-PARVO .
CVIV_CP3_LINK-PAAUTH =
CVIC_CP3_LINK-PAAUTH .
    SELECT SINGLE * FROM TB914 WHERE
PAAUTH = CVIC_CP3_LINK-PAAUTH .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB915 WHERE
PAAUTH = TB914-PAAUTH AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP3_LINK-BEZ20 =
TB915-BEZ20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP3_LINK-BEZ20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP3_LINK-BEZ20 .
    ENDIF.
    SELECT SINGLE * FROM TVPV WHERE
PARVO = CVIC_CP3_LINK-PARVO .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVPVT WHERE
PARVO = TVPV-PARVO AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP3_LINK-VTEXT =
TVPVT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP3_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP3_LINK-VTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CP3_LINK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CP3_LINK-PARVO TO
CVIC_CP3_LINK-PARVO .
MOVE CVIV_CP3_LINK-CLIENT TO
CVIC_CP3_LINK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CP3_LINK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CP3_LINK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CP3_LINK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_CP3_LINK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_CP3_LINK-CLIENT =
CVIV_CP3_LINK-CLIENT .
CVIC_CP3_LINK-PARVO =
CVIV_CP3_LINK-PARVO .
CVIC_CP3_LINK-PAAUTH =
CVIV_CP3_LINK-PAAUTH .
    SELECT SINGLE * FROM TB914 WHERE
PAAUTH = CVIC_CP3_LINK-PAAUTH .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB915 WHERE
PAAUTH = TB914-PAAUTH AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP3_LINK-BEZ20 =
TB915-BEZ20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP3_LINK-BEZ20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP3_LINK-BEZ20 .
    ENDIF.
    SELECT SINGLE * FROM TVPV WHERE
PARVO = CVIC_CP3_LINK-PARVO .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVPVT WHERE
PARVO = TVPV-PARVO AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP3_LINK-VTEXT =
TVPVT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP3_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP3_LINK-VTEXT .
    ENDIF.
ENDFORM.
*...processing: CVIV_CP4_LINK...................................*
FORM GET_DATA_CVIV_CP4_LINK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CP4_LINK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CP4_LINK .
CVIV_CP4_LINK-CLIENT =
CVIC_CP4_LINK-CLIENT .
CVIV_CP4_LINK-PAVIP =
CVIC_CP4_LINK-PAVIP .
CVIV_CP4_LINK-GP_PAVIP =
CVIC_CP4_LINK-GP_PAVIP .
    SELECT SINGLE * FROM TB916 WHERE
PAVIP = CVIC_CP4_LINK-GP_PAVIP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB917 WHERE
PAVIP = TB916-PAVIP AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP4_LINK-BEZ20 =
TB917-BEZ20 .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM TVIP WHERE
PAVIP = CVIC_CP4_LINK-PAVIP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVIPT WHERE
PAVIP = TVIP-PAVIP AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP4_LINK-VTEXT =
TVIPT-VTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_CP4_LINK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CP4_LINK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CP4_LINK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CP4_LINK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP4_LINK WHERE
  PAVIP = CVIV_CP4_LINK-PAVIP .
    IF SY-SUBRC = 0.
    DELETE CVIC_CP4_LINK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CP4_LINK WHERE
  PAVIP = CVIV_CP4_LINK-PAVIP .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CP4_LINK.
    ENDIF.
CVIC_CP4_LINK-CLIENT =
CVIV_CP4_LINK-CLIENT .
CVIC_CP4_LINK-PAVIP =
CVIV_CP4_LINK-PAVIP .
CVIC_CP4_LINK-GP_PAVIP =
CVIV_CP4_LINK-GP_PAVIP .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CP4_LINK .
    ELSE.
    INSERT CVIC_CP4_LINK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CP4_LINK-UPD_FLAG,
STATUS_CVIV_CP4_LINK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CP4_LINK.
  SELECT SINGLE * FROM CVIC_CP4_LINK WHERE
PAVIP = CVIV_CP4_LINK-PAVIP .
CVIV_CP4_LINK-CLIENT =
CVIC_CP4_LINK-CLIENT .
CVIV_CP4_LINK-PAVIP =
CVIC_CP4_LINK-PAVIP .
CVIV_CP4_LINK-GP_PAVIP =
CVIC_CP4_LINK-GP_PAVIP .
    SELECT SINGLE * FROM TB916 WHERE
PAVIP = CVIC_CP4_LINK-GP_PAVIP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB917 WHERE
PAVIP = TB916-PAVIP AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP4_LINK-BEZ20 =
TB917-BEZ20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP4_LINK-BEZ20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP4_LINK-BEZ20 .
    ENDIF.
    SELECT SINGLE * FROM TVIP WHERE
PAVIP = CVIC_CP4_LINK-PAVIP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVIPT WHERE
PAVIP = TVIP-PAVIP AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP4_LINK-VTEXT =
TVIPT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP4_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP4_LINK-VTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CP4_LINK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CP4_LINK-PAVIP TO
CVIC_CP4_LINK-PAVIP .
MOVE CVIV_CP4_LINK-CLIENT TO
CVIC_CP4_LINK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CP4_LINK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CP4_LINK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CP4_LINK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_CP4_LINK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_CP4_LINK-CLIENT =
CVIV_CP4_LINK-CLIENT .
CVIC_CP4_LINK-PAVIP =
CVIV_CP4_LINK-PAVIP .
CVIC_CP4_LINK-GP_PAVIP =
CVIV_CP4_LINK-GP_PAVIP .
    SELECT SINGLE * FROM TB916 WHERE
PAVIP = CVIC_CP4_LINK-GP_PAVIP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB917 WHERE
PAVIP = TB916-PAVIP AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP4_LINK-BEZ20 =
TB917-BEZ20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP4_LINK-BEZ20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP4_LINK-BEZ20 .
    ENDIF.
    SELECT SINGLE * FROM TVIP WHERE
PAVIP = CVIC_CP4_LINK-PAVIP .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVIPT WHERE
PAVIP = TVIP-PAVIP AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_CP4_LINK-VTEXT =
TVIPT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_CP4_LINK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_CP4_LINK-VTEXT .
    ENDIF.
ENDFORM.
*...processing: CVIV_CUST_TO_BP1................................*
FORM GET_DATA_CVIV_CUST_TO_BP1.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CUST_TO_BP1 WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CUST_TO_BP1 .
CVIV_CUST_TO_BP1-CLIENT =
CVIC_CUST_TO_BP1-CLIENT .
CVIV_CUST_TO_BP1-ACCOUNT_GROUP =
CVIC_CUST_TO_BP1-ACCOUNT_GROUP .
CVIV_CUST_TO_BP1-GROUPING =
CVIC_CUST_TO_BP1-GROUPING .
CVIV_CUST_TO_BP1-SAME_NUMBER =
CVIC_CUST_TO_BP1-SAME_NUMBER .
<VIM_TOTAL_STRUC> = CVIV_CUST_TO_BP1.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CUST_TO_BP1 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CUST_TO_BP1.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CUST_TO_BP1-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CUST_TO_BP1 WHERE
  ACCOUNT_GROUP = CVIV_CUST_TO_BP1-ACCOUNT_GROUP .
    IF SY-SUBRC = 0.
    DELETE CVIC_CUST_TO_BP1 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CUST_TO_BP1 WHERE
  ACCOUNT_GROUP = CVIV_CUST_TO_BP1-ACCOUNT_GROUP .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CUST_TO_BP1.
    ENDIF.
CVIC_CUST_TO_BP1-CLIENT =
CVIV_CUST_TO_BP1-CLIENT .
CVIC_CUST_TO_BP1-ACCOUNT_GROUP =
CVIV_CUST_TO_BP1-ACCOUNT_GROUP .
CVIC_CUST_TO_BP1-GROUPING =
CVIV_CUST_TO_BP1-GROUPING .
CVIC_CUST_TO_BP1-SAME_NUMBER =
CVIV_CUST_TO_BP1-SAME_NUMBER .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CUST_TO_BP1 .
    ELSE.
    INSERT CVIC_CUST_TO_BP1 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CUST_TO_BP1-UPD_FLAG,
STATUS_CVIV_CUST_TO_BP1-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CUST_TO_BP1.
  SELECT SINGLE * FROM CVIC_CUST_TO_BP1 WHERE
ACCOUNT_GROUP = CVIV_CUST_TO_BP1-ACCOUNT_GROUP .
CVIV_CUST_TO_BP1-CLIENT =
CVIC_CUST_TO_BP1-CLIENT .
CVIV_CUST_TO_BP1-ACCOUNT_GROUP =
CVIC_CUST_TO_BP1-ACCOUNT_GROUP .
CVIV_CUST_TO_BP1-GROUPING =
CVIC_CUST_TO_BP1-GROUPING .
CVIV_CUST_TO_BP1-SAME_NUMBER =
CVIC_CUST_TO_BP1-SAME_NUMBER .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CUST_TO_BP1 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CUST_TO_BP1-ACCOUNT_GROUP TO
CVIC_CUST_TO_BP1-ACCOUNT_GROUP .
MOVE CVIV_CUST_TO_BP1-CLIENT TO
CVIC_CUST_TO_BP1-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CUST_TO_BP1'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CUST_TO_BP1 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CUST_TO_BP1'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: CVIV_CUST_TO_BP2................................*
FORM GET_DATA_CVIV_CUST_TO_BP2.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_CUST_TO_BP2 WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_CUST_TO_BP2 .
CVIV_CUST_TO_BP2-CLIENT =
CVIC_CUST_TO_BP2-CLIENT .
CVIV_CUST_TO_BP2-ACCOUNT_GROUP =
CVIC_CUST_TO_BP2-ACCOUNT_GROUP .
CVIV_CUST_TO_BP2-ROLE =
CVIC_CUST_TO_BP2-ROLE .
<VIM_TOTAL_STRUC> = CVIV_CUST_TO_BP2.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_CUST_TO_BP2 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_CUST_TO_BP2.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_CUST_TO_BP2-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CUST_TO_BP2 WHERE
  ACCOUNT_GROUP = CVIV_CUST_TO_BP2-ACCOUNT_GROUP AND
  ROLE = CVIV_CUST_TO_BP2-ROLE .
    IF SY-SUBRC = 0.
    DELETE CVIC_CUST_TO_BP2 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_CUST_TO_BP2 WHERE
  ACCOUNT_GROUP = CVIV_CUST_TO_BP2-ACCOUNT_GROUP AND
  ROLE = CVIV_CUST_TO_BP2-ROLE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_CUST_TO_BP2.
    ENDIF.
CVIC_CUST_TO_BP2-CLIENT =
CVIV_CUST_TO_BP2-CLIENT .
CVIC_CUST_TO_BP2-ACCOUNT_GROUP =
CVIV_CUST_TO_BP2-ACCOUNT_GROUP .
CVIC_CUST_TO_BP2-ROLE =
CVIV_CUST_TO_BP2-ROLE .
    IF SY-SUBRC = 0.
    UPDATE CVIC_CUST_TO_BP2 .
    ELSE.
    INSERT CVIC_CUST_TO_BP2 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_CUST_TO_BP2-UPD_FLAG,
STATUS_CVIV_CUST_TO_BP2-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_CUST_TO_BP2.
  SELECT SINGLE * FROM CVIC_CUST_TO_BP2 WHERE
ACCOUNT_GROUP = CVIV_CUST_TO_BP2-ACCOUNT_GROUP AND
ROLE = CVIV_CUST_TO_BP2-ROLE .
CVIV_CUST_TO_BP2-CLIENT =
CVIC_CUST_TO_BP2-CLIENT .
CVIV_CUST_TO_BP2-ACCOUNT_GROUP =
CVIC_CUST_TO_BP2-ACCOUNT_GROUP .
CVIV_CUST_TO_BP2-ROLE =
CVIC_CUST_TO_BP2-ROLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_CUST_TO_BP2 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_CUST_TO_BP2-ACCOUNT_GROUP TO
CVIC_CUST_TO_BP2-ACCOUNT_GROUP .
MOVE CVIV_CUST_TO_BP2-ROLE TO
CVIC_CUST_TO_BP2-ROLE .
MOVE CVIV_CUST_TO_BP2-CLIENT TO
CVIC_CUST_TO_BP2-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_CUST_TO_BP2'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_CUST_TO_BP2 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_CUST_TO_BP2'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: CVIV_LEGFORM_LNK................................*
FORM GET_DATA_CVIV_LEGFORM_LNK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_LEGFORM_LNK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_LEGFORM_LNK .
CVIV_LEGFORM_LNK-CLIENT =
CVIC_LEGFORM_LNK-CLIENT .
CVIV_LEGFORM_LNK-GFORM =
CVIC_LEGFORM_LNK-GFORM .
CVIV_LEGFORM_LNK-LEGAL_ENTY =
CVIC_LEGFORM_LNK-LEGAL_ENTY .
    SELECT SINGLE * FROM TB019 WHERE
LEGAL_ENTY = CVIC_LEGFORM_LNK-LEGAL_ENTY .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB020 WHERE
LEGAL_ENTY = TB019-LEGAL_ENTY AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_LEGFORM_LNK-TEXTLONG =
TB020-TEXTLONG .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM TVGF WHERE
GFORM = CVIC_LEGFORM_LNK-GFORM .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVGFT WHERE
GFORM = TVGF-GFORM AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_LEGFORM_LNK-VTEXT =
TVGFT-VTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_LEGFORM_LNK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_LEGFORM_LNK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_LEGFORM_LNK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_LEGFORM_LNK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_LEGFORM_LNK WHERE
  GFORM = CVIV_LEGFORM_LNK-GFORM .
    IF SY-SUBRC = 0.
    DELETE CVIC_LEGFORM_LNK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_LEGFORM_LNK WHERE
  GFORM = CVIV_LEGFORM_LNK-GFORM .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_LEGFORM_LNK.
    ENDIF.
CVIC_LEGFORM_LNK-CLIENT =
CVIV_LEGFORM_LNK-CLIENT .
CVIC_LEGFORM_LNK-GFORM =
CVIV_LEGFORM_LNK-GFORM .
CVIC_LEGFORM_LNK-LEGAL_ENTY =
CVIV_LEGFORM_LNK-LEGAL_ENTY .
    IF SY-SUBRC = 0.
    UPDATE CVIC_LEGFORM_LNK .
    ELSE.
    INSERT CVIC_LEGFORM_LNK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_LEGFORM_LNK-UPD_FLAG,
STATUS_CVIV_LEGFORM_LNK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_LEGFORM_LNK.
  SELECT SINGLE * FROM CVIC_LEGFORM_LNK WHERE
GFORM = CVIV_LEGFORM_LNK-GFORM .
CVIV_LEGFORM_LNK-CLIENT =
CVIC_LEGFORM_LNK-CLIENT .
CVIV_LEGFORM_LNK-GFORM =
CVIC_LEGFORM_LNK-GFORM .
CVIV_LEGFORM_LNK-LEGAL_ENTY =
CVIC_LEGFORM_LNK-LEGAL_ENTY .
    SELECT SINGLE * FROM TB019 WHERE
LEGAL_ENTY = CVIC_LEGFORM_LNK-LEGAL_ENTY .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB020 WHERE
LEGAL_ENTY = TB019-LEGAL_ENTY AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_LEGFORM_LNK-TEXTLONG =
TB020-TEXTLONG .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_LEGFORM_LNK-TEXTLONG .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_LEGFORM_LNK-TEXTLONG .
    ENDIF.
    SELECT SINGLE * FROM TVGF WHERE
GFORM = CVIC_LEGFORM_LNK-GFORM .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVGFT WHERE
GFORM = TVGF-GFORM AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_LEGFORM_LNK-VTEXT =
TVGFT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_LEGFORM_LNK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_LEGFORM_LNK-VTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_LEGFORM_LNK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_LEGFORM_LNK-GFORM TO
CVIC_LEGFORM_LNK-GFORM .
MOVE CVIV_LEGFORM_LNK-CLIENT TO
CVIC_LEGFORM_LNK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_LEGFORM_LNK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_LEGFORM_LNK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_LEGFORM_LNK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_LEGFORM_LNK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_LEGFORM_LNK-CLIENT =
CVIV_LEGFORM_LNK-CLIENT .
CVIC_LEGFORM_LNK-GFORM =
CVIV_LEGFORM_LNK-GFORM .
CVIC_LEGFORM_LNK-LEGAL_ENTY =
CVIV_LEGFORM_LNK-LEGAL_ENTY .
    SELECT SINGLE * FROM TB019 WHERE
LEGAL_ENTY = CVIC_LEGFORM_LNK-LEGAL_ENTY .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB020 WHERE
LEGAL_ENTY = TB019-LEGAL_ENTY AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_LEGFORM_LNK-TEXTLONG =
TB020-TEXTLONG .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_LEGFORM_LNK-TEXTLONG .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_LEGFORM_LNK-TEXTLONG .
    ENDIF.
    SELECT SINGLE * FROM TVGF WHERE
GFORM = CVIC_LEGFORM_LNK-GFORM .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TVGFT WHERE
GFORM = TVGF-GFORM AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
CVIV_LEGFORM_LNK-VTEXT =
TVGFT-VTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR CVIV_LEGFORM_LNK-VTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR CVIV_LEGFORM_LNK-VTEXT .
    ENDIF.
ENDFORM.
*...processing: CVIV_MAP_CONTACT................................*
FORM GET_DATA_CVIV_MAP_CONTACT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_MAP_CONTACT WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_MAP_CONTACT .
CVIV_MAP_CONTACT-CLIENT =
CVIC_MAP_CONTACT-CLIENT .
CVIV_MAP_CONTACT-MAP_CONTACT =
CVIC_MAP_CONTACT-MAP_CONTACT .
<VIM_TOTAL_STRUC> = CVIV_MAP_CONTACT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_MAP_CONTACT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_MAP_CONTACT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_MAP_CONTACT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_MAP_CONTACT.
    IF SY-SUBRC = 0.
    DELETE CVIC_MAP_CONTACT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_MAP_CONTACT.
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_MAP_CONTACT.
    ENDIF.
CVIC_MAP_CONTACT-CLIENT =
CVIV_MAP_CONTACT-CLIENT .
CVIC_MAP_CONTACT-MAP_CONTACT =
CVIV_MAP_CONTACT-MAP_CONTACT .
    IF SY-SUBRC = 0.
    UPDATE CVIC_MAP_CONTACT .
    ELSE.
    INSERT CVIC_MAP_CONTACT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_MAP_CONTACT-UPD_FLAG,
STATUS_CVIV_MAP_CONTACT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_MAP_CONTACT.
  SELECT SINGLE * FROM CVIC_MAP_CONTACT.
CVIV_MAP_CONTACT-CLIENT =
CVIC_MAP_CONTACT-CLIENT .
CVIV_MAP_CONTACT-MAP_CONTACT =
CVIC_MAP_CONTACT-MAP_CONTACT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_MAP_CONTACT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_MAP_CONTACT-CLIENT TO
CVIC_MAP_CONTACT-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_MAP_CONTACT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_MAP_CONTACT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_MAP_CONTACT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: CVIV_MARST_LINK.................................*
FORM GET_DATA_CVIV_MARST_LINK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_MARST_LINK WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_MARST_LINK .
CVIV_MARST_LINK-CLIENT =
CVIC_MARST_LINK-CLIENT .
CVIV_MARST_LINK-FAMST =
CVIC_MARST_LINK-FAMST .
CVIV_MARST_LINK-MARST =
CVIC_MARST_LINK-MARST .
    SELECT SINGLE * FROM TB027 WHERE
MARST = CVIC_MARST_LINK-MARST .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB027T WHERE
MARST = TB027-MARST AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = CVIV_MARST_LINK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_MARST_LINK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_MARST_LINK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_MARST_LINK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_MARST_LINK WHERE
  FAMST = CVIV_MARST_LINK-FAMST .
    IF SY-SUBRC = 0.
    DELETE CVIC_MARST_LINK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_MARST_LINK WHERE
  FAMST = CVIV_MARST_LINK-FAMST .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_MARST_LINK.
    ENDIF.
CVIC_MARST_LINK-CLIENT =
CVIV_MARST_LINK-CLIENT .
CVIC_MARST_LINK-FAMST =
CVIV_MARST_LINK-FAMST .
CVIC_MARST_LINK-MARST =
CVIV_MARST_LINK-MARST .
    IF SY-SUBRC = 0.
    UPDATE CVIC_MARST_LINK .
    ELSE.
    INSERT CVIC_MARST_LINK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_MARST_LINK-UPD_FLAG,
STATUS_CVIV_MARST_LINK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_MARST_LINK.
  SELECT SINGLE * FROM CVIC_MARST_LINK WHERE
FAMST = CVIV_MARST_LINK-FAMST .
CVIV_MARST_LINK-CLIENT =
CVIC_MARST_LINK-CLIENT .
CVIV_MARST_LINK-FAMST =
CVIC_MARST_LINK-FAMST .
CVIV_MARST_LINK-MARST =
CVIC_MARST_LINK-MARST .
    SELECT SINGLE * FROM TB027 WHERE
MARST = CVIC_MARST_LINK-MARST .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB027T WHERE
MARST = TB027-MARST AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
      ELSE.
        CLEAR SY-SUBRC.
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_MARST_LINK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_MARST_LINK-FAMST TO
CVIC_MARST_LINK-FAMST .
MOVE CVIV_MARST_LINK-CLIENT TO
CVIC_MARST_LINK-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_MARST_LINK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_MARST_LINK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_MARST_LINK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_CVIV_MARST_LINK USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
CVIC_MARST_LINK-CLIENT =
CVIV_MARST_LINK-CLIENT .
CVIC_MARST_LINK-FAMST =
CVIV_MARST_LINK-FAMST .
CVIC_MARST_LINK-MARST =
CVIV_MARST_LINK-MARST .
    SELECT SINGLE * FROM TB027 WHERE
MARST = CVIC_MARST_LINK-MARST .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM TB027T WHERE
MARST = TB027-MARST AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
      ELSE.
        CLEAR SY-SUBRC.
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: CVIV_VEND_TO_BP1................................*
FORM GET_DATA_CVIV_VEND_TO_BP1.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_VEND_TO_BP1 WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_VEND_TO_BP1 .
CVIV_VEND_TO_BP1-CLIENT =
CVIC_VEND_TO_BP1-CLIENT .
CVIV_VEND_TO_BP1-ACCOUNT_GROUP =
CVIC_VEND_TO_BP1-ACCOUNT_GROUP .
CVIV_VEND_TO_BP1-GROUPING =
CVIC_VEND_TO_BP1-GROUPING .
CVIV_VEND_TO_BP1-SAME_NUMBER =
CVIC_VEND_TO_BP1-SAME_NUMBER .
<VIM_TOTAL_STRUC> = CVIV_VEND_TO_BP1.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_VEND_TO_BP1 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_VEND_TO_BP1.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_VEND_TO_BP1-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_VEND_TO_BP1 WHERE
  ACCOUNT_GROUP = CVIV_VEND_TO_BP1-ACCOUNT_GROUP .
    IF SY-SUBRC = 0.
    DELETE CVIC_VEND_TO_BP1 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_VEND_TO_BP1 WHERE
  ACCOUNT_GROUP = CVIV_VEND_TO_BP1-ACCOUNT_GROUP .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_VEND_TO_BP1.
    ENDIF.
CVIC_VEND_TO_BP1-CLIENT =
CVIV_VEND_TO_BP1-CLIENT .
CVIC_VEND_TO_BP1-ACCOUNT_GROUP =
CVIV_VEND_TO_BP1-ACCOUNT_GROUP .
CVIC_VEND_TO_BP1-GROUPING =
CVIV_VEND_TO_BP1-GROUPING .
CVIC_VEND_TO_BP1-SAME_NUMBER =
CVIV_VEND_TO_BP1-SAME_NUMBER .
    IF SY-SUBRC = 0.
    UPDATE CVIC_VEND_TO_BP1 .
    ELSE.
    INSERT CVIC_VEND_TO_BP1 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_VEND_TO_BP1-UPD_FLAG,
STATUS_CVIV_VEND_TO_BP1-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_VEND_TO_BP1.
  SELECT SINGLE * FROM CVIC_VEND_TO_BP1 WHERE
ACCOUNT_GROUP = CVIV_VEND_TO_BP1-ACCOUNT_GROUP .
CVIV_VEND_TO_BP1-CLIENT =
CVIC_VEND_TO_BP1-CLIENT .
CVIV_VEND_TO_BP1-ACCOUNT_GROUP =
CVIC_VEND_TO_BP1-ACCOUNT_GROUP .
CVIV_VEND_TO_BP1-GROUPING =
CVIC_VEND_TO_BP1-GROUPING .
CVIV_VEND_TO_BP1-SAME_NUMBER =
CVIC_VEND_TO_BP1-SAME_NUMBER .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_VEND_TO_BP1 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_VEND_TO_BP1-ACCOUNT_GROUP TO
CVIC_VEND_TO_BP1-ACCOUNT_GROUP .
MOVE CVIV_VEND_TO_BP1-CLIENT TO
CVIC_VEND_TO_BP1-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_VEND_TO_BP1'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_VEND_TO_BP1 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_VEND_TO_BP1'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: CVIV_VEND_TO_BP2................................*
FORM GET_DATA_CVIV_VEND_TO_BP2.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM CVIC_VEND_TO_BP2 WHERE
(VIM_WHERETAB) .
    CLEAR CVIV_VEND_TO_BP2 .
CVIV_VEND_TO_BP2-CLIENT =
CVIC_VEND_TO_BP2-CLIENT .
CVIV_VEND_TO_BP2-ACCOUNT_GROUP =
CVIC_VEND_TO_BP2-ACCOUNT_GROUP .
CVIV_VEND_TO_BP2-ROLE =
CVIC_VEND_TO_BP2-ROLE .
<VIM_TOTAL_STRUC> = CVIV_VEND_TO_BP2.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_CVIV_VEND_TO_BP2 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO CVIV_VEND_TO_BP2.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_CVIV_VEND_TO_BP2-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM CVIC_VEND_TO_BP2 WHERE
  ACCOUNT_GROUP = CVIV_VEND_TO_BP2-ACCOUNT_GROUP AND
  ROLE = CVIV_VEND_TO_BP2-ROLE .
    IF SY-SUBRC = 0.
    DELETE CVIC_VEND_TO_BP2 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM CVIC_VEND_TO_BP2 WHERE
  ACCOUNT_GROUP = CVIV_VEND_TO_BP2-ACCOUNT_GROUP AND
  ROLE = CVIV_VEND_TO_BP2-ROLE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR CVIC_VEND_TO_BP2.
    ENDIF.
CVIC_VEND_TO_BP2-CLIENT =
CVIV_VEND_TO_BP2-CLIENT .
CVIC_VEND_TO_BP2-ACCOUNT_GROUP =
CVIV_VEND_TO_BP2-ACCOUNT_GROUP .
CVIC_VEND_TO_BP2-ROLE =
CVIV_VEND_TO_BP2-ROLE .
    IF SY-SUBRC = 0.
    UPDATE CVIC_VEND_TO_BP2 .
    ELSE.
    INSERT CVIC_VEND_TO_BP2 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_CVIV_VEND_TO_BP2-UPD_FLAG,
STATUS_CVIV_VEND_TO_BP2-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_CVIV_VEND_TO_BP2.
  SELECT SINGLE * FROM CVIC_VEND_TO_BP2 WHERE
ACCOUNT_GROUP = CVIV_VEND_TO_BP2-ACCOUNT_GROUP AND
ROLE = CVIV_VEND_TO_BP2-ROLE .
CVIV_VEND_TO_BP2-CLIENT =
CVIC_VEND_TO_BP2-CLIENT .
CVIV_VEND_TO_BP2-ACCOUNT_GROUP =
CVIC_VEND_TO_BP2-ACCOUNT_GROUP .
CVIV_VEND_TO_BP2-ROLE =
CVIC_VEND_TO_BP2-ROLE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_CVIV_VEND_TO_BP2 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE CVIV_VEND_TO_BP2-ACCOUNT_GROUP TO
CVIC_VEND_TO_BP2-ACCOUNT_GROUP .
MOVE CVIV_VEND_TO_BP2-ROLE TO
CVIC_VEND_TO_BP2-ROLE .
MOVE CVIV_VEND_TO_BP2-CLIENT TO
CVIC_VEND_TO_BP2-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'CVIC_VEND_TO_BP2'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN CVIC_VEND_TO_BP2 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'CVIC_VEND_TO_BP2'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
